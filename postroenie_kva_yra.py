from math import * 
from tkinter import *

a =  input ('Введи значения a = ')  # Коэффициент перед x^2
b =  input ('Введи значения b = ')  # Коэффициент перед x
c =  input ('Введи значения c = ')  # Свободный челен

a = float(a)
b = float(b)
c = float(c)

print('')
if a == 0:
  print ('Такого квадратного уравнения быть не может')  # Т.к. а не может быть равно нулю то 
else :  
  d = b * b - 4 * a * c                                 # Dискриминант этого уравнения
  print(' Dискриминант этого уравнения : ' + str (d))   # Выводим Dискриминант

  print('')
  print('        Решение уравнения')                                            # Решение уравнения         
  print('')

  if d > 0  :                                                                   # 1 случай
    x1 = float( (- b - sqrt(d) )  /  ( 2 * a )   )
    x2 = float( (- b + sqrt(d) )  /  ( 2 * a )   )
    print('x1 = ' +  str(x1)   )
    print('x2 = ' +  str(x2)   )   

  if d == 0 :	                                                                  # 2 случай
    x1 = float( (-b) / (2 * a) )
    x2 = 'ya2'
    print('x1 = ' +  str(x1) )
  
  if d < 0  :                                                                   # 3 случай
    x1 = 'ya'
    x2 = 'ya2'
    print('x = нет корней')   



  

  if (x1 == 'ya' or x1 == 0) and ( x2 == 0 or x2 == 'ya2' )  :                                                                # Если уравнение решить нельзя то и упращение сделать нельзя
    print('        Упращение сделать нельзя')  
  else :
    print('')
    print('        Упращение уравнения')                                          # Упращение уравнения         
    print('')

    #print('Упращенное уравнение :  ' + str(a) + '*( x -(' + str(x1) + '))*( x -(' + str(x2) + '))')      #  Упращение уравнения попроще 
    
    if a == 1 and (x1 > 0 and x2 > 0) :
     print('Упращенное уравнение :  ( x - ' + str(x1) + ')*( x - ' + str(x2) + ')' )                   # Это вывод делает красивее 

    if a == 1 and (x1 > 0 and x2 < 0) :                                                                # И остальное тоже
      print('Упращенное уравнение :  ( x - ' + str(x1) + ')*( x + ' + str(-x2) + ')' ) 

    if a == 1 and (x1 > 0 and x2 == 0) :
      print('Упращенное уравнение :  ( x - ' + str(x1) + ')*( x )' ) 

    if a == 1 and (x1 < 0 and x2 > 0) :
      print('Упращенное уравнение :  ( x + ' + str(-x1) + ')*( x - ' + str(x2) + ')' ) 

    if a == 1 and (x1 == 0 and x2 > 0) :
      print('Упращенное уравнение :  ( x )*( x - ' + str(x2) + ')' ) 

    if a == 1 and (x1 == 0 and x2 < 0) :
      print('Упращенное уравнение :  ( x )*( x + ' + str(-x2) + ')' ) 

    if a == 1 and (x1 == 0 and x2 == 0) :
      print('Упращенное уравнение :  ( x )*( x )' ) 

    if a == 1 and (x1 < 0 and x2 == 0) :
      print('Упращенное уравнение :  ( x + ' + str(-x1) + ')*( x )' ) 

    if a == 1 and (x1 < 0 and x2 < 0) :
      print('Упращенное уравнение :  ( x + ' + str(-x1) + ')*( x + ' + str(-x2) + ')' ) 



    if (a < 1 or a > 1 ) and (x1 > 0 and x2 > 0) :
      print('Упращенное уравнение : ' + str(a) +  ' * ( x - ' + str(x1) + ')*( x - ' + str(x2) + ')' ) 
 
    if (a < 1 or a > 1 ) and (x1 > 0 and x2 < 0) :
      print('Упращенное уравнение :  * ( x - ' + str(x1) + ')*( x +' + str(-x2) + ')' ) 

    if (a < 1 or a > 1 ) and (x1 > 0 and x2 == 0) :
      print('Упращенное уравнение : ' + str(a) + '  * ( x - ' + str(x1) + ')*( x )' ) 

    if (a < 1 or a > 1 ) and (x1 < 0 and x2 > 0) :
      print('Упращенное уравнение : ' + str(a) + ' * ( x + ' + str(-x1) + ')*( x - ' + str(x2) + ')' ) 

    if (a < 1 or a > 1 ) and (x1 == 0 and x2 > 0) :
      print('Упращенное уравнение : ' + str(a) + ' * ( x )*( x - ' + str(x2) + ')' ) 

    if (a < 1 or a > 1 ) and (x1 == 0 and x2 < 0) :
      print('Упращенное уравнение : ' + str(a) + ' * ( x )*( x + ' + str(-x2) + ')' ) 

    if (a < 1 or a > 1 ) and (x1 == 0 and x2 == 0) :
      print('Упращенное уравнение : ' + str(a) + ' * ( x )*( x )' ) 

    if (a < 1 or a > 1 ) and (x1 < 0 and x2 == 0) :
      print('Упращенное уравнение : ' + str(a) + ' * ( x + ' + str(-x1) + ')*( x )' ) 

    if (a < 1 or a > 1 ) and (x1 < 0 and x2 < 0) :
      print('Упращенное уравнение : ' + str(a) + '  * ( x + ' + str(-x1) + ')*( x + ' + str(-x2) + ')' ) 
  


  if  x1 == 'ya'  :                                                              # Если уравнение решить нельзя то и график построить нельзя
    print('        График построить нельзя')  

  else : 
  
    print () 
    print ('        Построение графика')
    print ()   

    m = ( -b ) / ( 2 * a )                                         # Координаты вершины (m)
    n = a * ( m * m )+ b * m + c                                   # Координаты вершины (n)

    print () 

    print( ' Координаты вершины (' + str(m) + ';' + str(n) + ')'  )# Выводим координаты вершин (m;n)

    print () 

    if a > 0 :                                                     # Определяем куда направлены ветви пораболы 
      print(' Ветви пораболы направлены вверх ')
      print()
    else :
      print(' Ветви пораболы направлены вниз')
      print () 
   
    print( ' Первая точка ( 0 ; ' + str(c) + ' )' )                # Пересечение с Oy (первая точка)
 
    m1 = m - 1                                                     # Вспомогательная переменная для вспомогательных точек (m1)
    m2 = m + 1                                                     # Вспомогательная переменная для вспомогательных точек (m2)

    y1 =  a * ( m1 * m1 ) + b * m1 + c                             # Вспомогательная переменная для вспомогательных точек (y1)
    y2 =  a * ( m2 * m2 ) + b * m2 + c                             # Вспомогательная переменная для вспомогательных точек (y2)

    if d > 0 :                                                     # Когда дискриминант больше нуля
      print ( ' Вторая точка ( ' + str (x1) + ' ; 0 ) ' )
      print ( ' Третья точка ( ' + str (x2) + ' ; 0 ) ' )
      print ( ' Четвёртая точка ( ' + str (m1) + ' ; ' + str (y1) + ' )' ) # Доп. точка 1
      print ( ' Пятая точка ( ' + str (m2) + ' ; ' + str (y2) + ' )' )     # Доп. точка 2
  

    if d == 0 :                                                    # Когда дискриминант равен нулю
      print ( ' Вторая точка ( ' + str (x1) + ' ; 0 ) ' )
      print ( ' Третья точка ( ' + str (m1) + ' ; ' + str (y1) + ' )' )    # Доп. точка 1
      print ( ' Четвёртая точка ( ' + str (m2) + ' ; ' + str (y2) + ' )' ) # Доп. точка 2

    print () 

    #  Свойства                                                    # Cвойства

    print ('  Свойства этой пораболы : ')                          # Cвойства информируем пользователя

    if x1 == m :                                                    # Если порабола только косается одной точки на оси Оx
      print (' 1)y = 0 при x = ' + str(x1)  )                        # 1 свойство
    else :
      print (' 1)y = 0 при x = ' + str(x1) + ', x = ' + str(x2) )    # 1 свойство


    if a > 0 :
      print (' 2)y возростает при x э ( ' + str(m) + ' ; + бесконечноть )'  )  
      print ('   y убывает при x э ( - бесконечность ; ' + str(m) + ' )' )

    if a < 0 :                                                                 # 2 свойство 2 часть
      print ( ' 2)y убывает при x э ( - бесконечность ; ' + str(m) + ' )' )   
      print ( '   y возростает при x э ( ' + str(m) + ' ; + бесконечноть )'  )

    if a > 0 :                                                                 # 3 свойство 1 часть
      if n < 0 :
        print (' 3)y > 0 при x э ( - бесконечность ;' + str(x1) + ' ) U ( ' + str(x2) + ' ; + бесконечность )' )
        print ( '  y < 0 при x э ( ' + str(x1) + ' ; ' + str(x2) + ')' )
 
      if n >= 0 :
        print ( ' 3)y > 0 при x э (-бесконечность;+бесконечность)' )  

    if a < 0 :                                                                 # 3 свойство 2 часть
      if n < 0 :
        print (' 3)y > 0 при x э (-бесконечность;+бесконечность)' )
   
      if n >= 0 :
        print (' 3)y > 0 при x э ( ' + str(x1) + ' ; ' + str(x2) + ')' )
        print ( '  y < 0 при x э ( - бесконечность ; ' + str(x1) + ' ) U ( ' + str(x2) + ' ; + бесконечность )'                   )

    if a > 0 :                                                                 # 4 свойство 1 часть
      print (' 4)y наибольшего нет '  )                                   
      print ('  y наименьший y = ' + str(n) )

    if a < 0 :                                                                 # 4 свойство 2 часть
      print (' 4)y наибольший y = '  + str(n) )
      print ('   y наименьшего нет  ')

  f = str(a)+' * ( x * x ) + ' + str(b) + '* x + ' + str(c) 

  


  root = Tk()

  canv = Canvas(root, width = 1000, height = 1000, bg = "white")
  canv.create_line(500,1000,500,0,width=2,arrow=LAST) 
  canv.create_line(0,500,1000,500,width=2,arrow=LAST) 

  First_x = -500;

  for i in range(16000):
    if (i % 800 == 0):
      k = First_x + (1 / 16) * i
      canv.create_line(k + 500, -3 + 500, k + 500, 3 + 500, width = 0.5, fill = 'black')
      canv.create_text(k + 515, -10 + 500, text = str(k), fill="purple", font=("Helvectica", "10"))
      if (k != 0):
        canv.create_line(-3 + 500, k + 500, 3 + 500, k + 500, width = 0.5, fill = 'black')
        canv.create_text(20 + 500, k + 500, text = str(k), fill="purple", font=("Helvectica", "10"))
    try:
      x = First_x + (1 / 16) * i
      new_f = f.replace('x', str(x))
      y = -eval(new_f) + 500
      x += 500
      canv.create_oval(x, y, x + 1, y + 1, fill = 'black')
    except:
      pass
  canv.pack() 
  root.mainloop()


# Надо нормально допилить свойства
